/**
 * A class that knows how to walk down the tree. None of the individual visit
 * methods are implemented on this visitor, so it forces the consumer to
 * implement each one that they need. For a default implementation that
 * continues walking the tree, see the `Visitor` class.
 *
 */
export class BasicVisitor {
    /**
     * Calls `accept` on the given node if it is not `null`, which in turn should
     * call back into this visitor by calling the appropriate `visit*` method.
     *
     * @param {nodes.Node} node
     */
    visit(node: nodes.Node): void;
    /**
     * Visits each node in `nodes` by calling `accept` on each one.
     *
     * @param {nodes.Node[]} nodes
     */
    visitAll(nodes: nodes.Node[]): void;
    /**
     * Visits the child nodes of `node` by calling `accept` on each one.
     *
     * @param {nodes.Node} node
     */
    visitChildNodes(node: nodes.Node): void;
}
/**
 * A visitor is a class that provides a default implementation for every accept
 * method defined on the nodes. This means it can walk a tree without the
 * caller needing to define any special handling. This allows you to handle a
 * subset of the tree, while still walking the whole tree.
 *
 * For example, to find all of the method calls that call the `foo` method, you
 * could write:
 *
 * @example
 * class FooCalls extends Visitor {
 *   visitCallNode(node) {
 *     if (node.name === "foo") {
 *       // Do something with the node
 *     }
 *
 *     // Call super so that the visitor continues walking the tree
 *     super.visitCallNode(node);
 *   }
 * }
 *
 */
export class Visitor extends BasicVisitor {
    /**
     * Visit a AliasGlobalVariableNode node.
     *
     * @param {nodes.AliasGlobalVariableNode} node
     */
    visitAliasGlobalVariableNode(node: nodes.AliasGlobalVariableNode): void;
    /**
     * Visit a AliasMethodNode node.
     *
     * @param {nodes.AliasMethodNode} node
     */
    visitAliasMethodNode(node: nodes.AliasMethodNode): void;
    /**
     * Visit a AlternationPatternNode node.
     *
     * @param {nodes.AlternationPatternNode} node
     */
    visitAlternationPatternNode(node: nodes.AlternationPatternNode): void;
    /**
     * Visit a AndNode node.
     *
     * @param {nodes.AndNode} node
     */
    visitAndNode(node: nodes.AndNode): void;
    /**
     * Visit a ArgumentsNode node.
     *
     * @param {nodes.ArgumentsNode} node
     */
    visitArgumentsNode(node: nodes.ArgumentsNode): void;
    /**
     * Visit a ArrayNode node.
     *
     * @param {nodes.ArrayNode} node
     */
    visitArrayNode(node: nodes.ArrayNode): void;
    /**
     * Visit a ArrayPatternNode node.
     *
     * @param {nodes.ArrayPatternNode} node
     */
    visitArrayPatternNode(node: nodes.ArrayPatternNode): void;
    /**
     * Visit a AssocNode node.
     *
     * @param {nodes.AssocNode} node
     */
    visitAssocNode(node: nodes.AssocNode): void;
    /**
     * Visit a AssocSplatNode node.
     *
     * @param {nodes.AssocSplatNode} node
     */
    visitAssocSplatNode(node: nodes.AssocSplatNode): void;
    /**
     * Visit a BackReferenceReadNode node.
     *
     * @param {nodes.BackReferenceReadNode} node
     */
    visitBackReferenceReadNode(node: nodes.BackReferenceReadNode): void;
    /**
     * Visit a BeginNode node.
     *
     * @param {nodes.BeginNode} node
     */
    visitBeginNode(node: nodes.BeginNode): void;
    /**
     * Visit a BlockArgumentNode node.
     *
     * @param {nodes.BlockArgumentNode} node
     */
    visitBlockArgumentNode(node: nodes.BlockArgumentNode): void;
    /**
     * Visit a BlockLocalVariableNode node.
     *
     * @param {nodes.BlockLocalVariableNode} node
     */
    visitBlockLocalVariableNode(node: nodes.BlockLocalVariableNode): void;
    /**
     * Visit a BlockNode node.
     *
     * @param {nodes.BlockNode} node
     */
    visitBlockNode(node: nodes.BlockNode): void;
    /**
     * Visit a BlockParameterNode node.
     *
     * @param {nodes.BlockParameterNode} node
     */
    visitBlockParameterNode(node: nodes.BlockParameterNode): void;
    /**
     * Visit a BlockParametersNode node.
     *
     * @param {nodes.BlockParametersNode} node
     */
    visitBlockParametersNode(node: nodes.BlockParametersNode): void;
    /**
     * Visit a BreakNode node.
     *
     * @param {nodes.BreakNode} node
     */
    visitBreakNode(node: nodes.BreakNode): void;
    /**
     * Visit a CallAndWriteNode node.
     *
     * @param {nodes.CallAndWriteNode} node
     */
    visitCallAndWriteNode(node: nodes.CallAndWriteNode): void;
    /**
     * Visit a CallNode node.
     *
     * @param {nodes.CallNode} node
     */
    visitCallNode(node: nodes.CallNode): void;
    /**
     * Visit a CallOperatorWriteNode node.
     *
     * @param {nodes.CallOperatorWriteNode} node
     */
    visitCallOperatorWriteNode(node: nodes.CallOperatorWriteNode): void;
    /**
     * Visit a CallOrWriteNode node.
     *
     * @param {nodes.CallOrWriteNode} node
     */
    visitCallOrWriteNode(node: nodes.CallOrWriteNode): void;
    /**
     * Visit a CallTargetNode node.
     *
     * @param {nodes.CallTargetNode} node
     */
    visitCallTargetNode(node: nodes.CallTargetNode): void;
    /**
     * Visit a CapturePatternNode node.
     *
     * @param {nodes.CapturePatternNode} node
     */
    visitCapturePatternNode(node: nodes.CapturePatternNode): void;
    /**
     * Visit a CaseMatchNode node.
     *
     * @param {nodes.CaseMatchNode} node
     */
    visitCaseMatchNode(node: nodes.CaseMatchNode): void;
    /**
     * Visit a CaseNode node.
     *
     * @param {nodes.CaseNode} node
     */
    visitCaseNode(node: nodes.CaseNode): void;
    /**
     * Visit a ClassNode node.
     *
     * @param {nodes.ClassNode} node
     */
    visitClassNode(node: nodes.ClassNode): void;
    /**
     * Visit a ClassVariableAndWriteNode node.
     *
     * @param {nodes.ClassVariableAndWriteNode} node
     */
    visitClassVariableAndWriteNode(node: nodes.ClassVariableAndWriteNode): void;
    /**
     * Visit a ClassVariableOperatorWriteNode node.
     *
     * @param {nodes.ClassVariableOperatorWriteNode} node
     */
    visitClassVariableOperatorWriteNode(node: nodes.ClassVariableOperatorWriteNode): void;
    /**
     * Visit a ClassVariableOrWriteNode node.
     *
     * @param {nodes.ClassVariableOrWriteNode} node
     */
    visitClassVariableOrWriteNode(node: nodes.ClassVariableOrWriteNode): void;
    /**
     * Visit a ClassVariableReadNode node.
     *
     * @param {nodes.ClassVariableReadNode} node
     */
    visitClassVariableReadNode(node: nodes.ClassVariableReadNode): void;
    /**
     * Visit a ClassVariableTargetNode node.
     *
     * @param {nodes.ClassVariableTargetNode} node
     */
    visitClassVariableTargetNode(node: nodes.ClassVariableTargetNode): void;
    /**
     * Visit a ClassVariableWriteNode node.
     *
     * @param {nodes.ClassVariableWriteNode} node
     */
    visitClassVariableWriteNode(node: nodes.ClassVariableWriteNode): void;
    /**
     * Visit a ConstantAndWriteNode node.
     *
     * @param {nodes.ConstantAndWriteNode} node
     */
    visitConstantAndWriteNode(node: nodes.ConstantAndWriteNode): void;
    /**
     * Visit a ConstantOperatorWriteNode node.
     *
     * @param {nodes.ConstantOperatorWriteNode} node
     */
    visitConstantOperatorWriteNode(node: nodes.ConstantOperatorWriteNode): void;
    /**
     * Visit a ConstantOrWriteNode node.
     *
     * @param {nodes.ConstantOrWriteNode} node
     */
    visitConstantOrWriteNode(node: nodes.ConstantOrWriteNode): void;
    /**
     * Visit a ConstantPathAndWriteNode node.
     *
     * @param {nodes.ConstantPathAndWriteNode} node
     */
    visitConstantPathAndWriteNode(node: nodes.ConstantPathAndWriteNode): void;
    /**
     * Visit a ConstantPathNode node.
     *
     * @param {nodes.ConstantPathNode} node
     */
    visitConstantPathNode(node: nodes.ConstantPathNode): void;
    /**
     * Visit a ConstantPathOperatorWriteNode node.
     *
     * @param {nodes.ConstantPathOperatorWriteNode} node
     */
    visitConstantPathOperatorWriteNode(node: nodes.ConstantPathOperatorWriteNode): void;
    /**
     * Visit a ConstantPathOrWriteNode node.
     *
     * @param {nodes.ConstantPathOrWriteNode} node
     */
    visitConstantPathOrWriteNode(node: nodes.ConstantPathOrWriteNode): void;
    /**
     * Visit a ConstantPathTargetNode node.
     *
     * @param {nodes.ConstantPathTargetNode} node
     */
    visitConstantPathTargetNode(node: nodes.ConstantPathTargetNode): void;
    /**
     * Visit a ConstantPathWriteNode node.
     *
     * @param {nodes.ConstantPathWriteNode} node
     */
    visitConstantPathWriteNode(node: nodes.ConstantPathWriteNode): void;
    /**
     * Visit a ConstantReadNode node.
     *
     * @param {nodes.ConstantReadNode} node
     */
    visitConstantReadNode(node: nodes.ConstantReadNode): void;
    /**
     * Visit a ConstantTargetNode node.
     *
     * @param {nodes.ConstantTargetNode} node
     */
    visitConstantTargetNode(node: nodes.ConstantTargetNode): void;
    /**
     * Visit a ConstantWriteNode node.
     *
     * @param {nodes.ConstantWriteNode} node
     */
    visitConstantWriteNode(node: nodes.ConstantWriteNode): void;
    /**
     * Visit a DefNode node.
     *
     * @param {nodes.DefNode} node
     */
    visitDefNode(node: nodes.DefNode): void;
    /**
     * Visit a DefinedNode node.
     *
     * @param {nodes.DefinedNode} node
     */
    visitDefinedNode(node: nodes.DefinedNode): void;
    /**
     * Visit a ElseNode node.
     *
     * @param {nodes.ElseNode} node
     */
    visitElseNode(node: nodes.ElseNode): void;
    /**
     * Visit a EmbeddedStatementsNode node.
     *
     * @param {nodes.EmbeddedStatementsNode} node
     */
    visitEmbeddedStatementsNode(node: nodes.EmbeddedStatementsNode): void;
    /**
     * Visit a EmbeddedVariableNode node.
     *
     * @param {nodes.EmbeddedVariableNode} node
     */
    visitEmbeddedVariableNode(node: nodes.EmbeddedVariableNode): void;
    /**
     * Visit a EnsureNode node.
     *
     * @param {nodes.EnsureNode} node
     */
    visitEnsureNode(node: nodes.EnsureNode): void;
    /**
     * Visit a FalseNode node.
     *
     * @param {nodes.FalseNode} node
     */
    visitFalseNode(node: nodes.FalseNode): void;
    /**
     * Visit a FindPatternNode node.
     *
     * @param {nodes.FindPatternNode} node
     */
    visitFindPatternNode(node: nodes.FindPatternNode): void;
    /**
     * Visit a FlipFlopNode node.
     *
     * @param {nodes.FlipFlopNode} node
     */
    visitFlipFlopNode(node: nodes.FlipFlopNode): void;
    /**
     * Visit a FloatNode node.
     *
     * @param {nodes.FloatNode} node
     */
    visitFloatNode(node: nodes.FloatNode): void;
    /**
     * Visit a ForNode node.
     *
     * @param {nodes.ForNode} node
     */
    visitForNode(node: nodes.ForNode): void;
    /**
     * Visit a ForwardingArgumentsNode node.
     *
     * @param {nodes.ForwardingArgumentsNode} node
     */
    visitForwardingArgumentsNode(node: nodes.ForwardingArgumentsNode): void;
    /**
     * Visit a ForwardingParameterNode node.
     *
     * @param {nodes.ForwardingParameterNode} node
     */
    visitForwardingParameterNode(node: nodes.ForwardingParameterNode): void;
    /**
     * Visit a ForwardingSuperNode node.
     *
     * @param {nodes.ForwardingSuperNode} node
     */
    visitForwardingSuperNode(node: nodes.ForwardingSuperNode): void;
    /**
     * Visit a GlobalVariableAndWriteNode node.
     *
     * @param {nodes.GlobalVariableAndWriteNode} node
     */
    visitGlobalVariableAndWriteNode(node: nodes.GlobalVariableAndWriteNode): void;
    /**
     * Visit a GlobalVariableOperatorWriteNode node.
     *
     * @param {nodes.GlobalVariableOperatorWriteNode} node
     */
    visitGlobalVariableOperatorWriteNode(node: nodes.GlobalVariableOperatorWriteNode): void;
    /**
     * Visit a GlobalVariableOrWriteNode node.
     *
     * @param {nodes.GlobalVariableOrWriteNode} node
     */
    visitGlobalVariableOrWriteNode(node: nodes.GlobalVariableOrWriteNode): void;
    /**
     * Visit a GlobalVariableReadNode node.
     *
     * @param {nodes.GlobalVariableReadNode} node
     */
    visitGlobalVariableReadNode(node: nodes.GlobalVariableReadNode): void;
    /**
     * Visit a GlobalVariableTargetNode node.
     *
     * @param {nodes.GlobalVariableTargetNode} node
     */
    visitGlobalVariableTargetNode(node: nodes.GlobalVariableTargetNode): void;
    /**
     * Visit a GlobalVariableWriteNode node.
     *
     * @param {nodes.GlobalVariableWriteNode} node
     */
    visitGlobalVariableWriteNode(node: nodes.GlobalVariableWriteNode): void;
    /**
     * Visit a HashNode node.
     *
     * @param {nodes.HashNode} node
     */
    visitHashNode(node: nodes.HashNode): void;
    /**
     * Visit a HashPatternNode node.
     *
     * @param {nodes.HashPatternNode} node
     */
    visitHashPatternNode(node: nodes.HashPatternNode): void;
    /**
     * Visit a IfNode node.
     *
     * @param {nodes.IfNode} node
     */
    visitIfNode(node: nodes.IfNode): void;
    /**
     * Visit a ImaginaryNode node.
     *
     * @param {nodes.ImaginaryNode} node
     */
    visitImaginaryNode(node: nodes.ImaginaryNode): void;
    /**
     * Visit a ImplicitNode node.
     *
     * @param {nodes.ImplicitNode} node
     */
    visitImplicitNode(node: nodes.ImplicitNode): void;
    /**
     * Visit a ImplicitRestNode node.
     *
     * @param {nodes.ImplicitRestNode} node
     */
    visitImplicitRestNode(node: nodes.ImplicitRestNode): void;
    /**
     * Visit a InNode node.
     *
     * @param {nodes.InNode} node
     */
    visitInNode(node: nodes.InNode): void;
    /**
     * Visit a IndexAndWriteNode node.
     *
     * @param {nodes.IndexAndWriteNode} node
     */
    visitIndexAndWriteNode(node: nodes.IndexAndWriteNode): void;
    /**
     * Visit a IndexOperatorWriteNode node.
     *
     * @param {nodes.IndexOperatorWriteNode} node
     */
    visitIndexOperatorWriteNode(node: nodes.IndexOperatorWriteNode): void;
    /**
     * Visit a IndexOrWriteNode node.
     *
     * @param {nodes.IndexOrWriteNode} node
     */
    visitIndexOrWriteNode(node: nodes.IndexOrWriteNode): void;
    /**
     * Visit a IndexTargetNode node.
     *
     * @param {nodes.IndexTargetNode} node
     */
    visitIndexTargetNode(node: nodes.IndexTargetNode): void;
    /**
     * Visit a InstanceVariableAndWriteNode node.
     *
     * @param {nodes.InstanceVariableAndWriteNode} node
     */
    visitInstanceVariableAndWriteNode(node: nodes.InstanceVariableAndWriteNode): void;
    /**
     * Visit a InstanceVariableOperatorWriteNode node.
     *
     * @param {nodes.InstanceVariableOperatorWriteNode} node
     */
    visitInstanceVariableOperatorWriteNode(node: nodes.InstanceVariableOperatorWriteNode): void;
    /**
     * Visit a InstanceVariableOrWriteNode node.
     *
     * @param {nodes.InstanceVariableOrWriteNode} node
     */
    visitInstanceVariableOrWriteNode(node: nodes.InstanceVariableOrWriteNode): void;
    /**
     * Visit a InstanceVariableReadNode node.
     *
     * @param {nodes.InstanceVariableReadNode} node
     */
    visitInstanceVariableReadNode(node: nodes.InstanceVariableReadNode): void;
    /**
     * Visit a InstanceVariableTargetNode node.
     *
     * @param {nodes.InstanceVariableTargetNode} node
     */
    visitInstanceVariableTargetNode(node: nodes.InstanceVariableTargetNode): void;
    /**
     * Visit a InstanceVariableWriteNode node.
     *
     * @param {nodes.InstanceVariableWriteNode} node
     */
    visitInstanceVariableWriteNode(node: nodes.InstanceVariableWriteNode): void;
    /**
     * Visit a IntegerNode node.
     *
     * @param {nodes.IntegerNode} node
     */
    visitIntegerNode(node: nodes.IntegerNode): void;
    /**
     * Visit a InterpolatedMatchLastLineNode node.
     *
     * @param {nodes.InterpolatedMatchLastLineNode} node
     */
    visitInterpolatedMatchLastLineNode(node: nodes.InterpolatedMatchLastLineNode): void;
    /**
     * Visit a InterpolatedRegularExpressionNode node.
     *
     * @param {nodes.InterpolatedRegularExpressionNode} node
     */
    visitInterpolatedRegularExpressionNode(node: nodes.InterpolatedRegularExpressionNode): void;
    /**
     * Visit a InterpolatedStringNode node.
     *
     * @param {nodes.InterpolatedStringNode} node
     */
    visitInterpolatedStringNode(node: nodes.InterpolatedStringNode): void;
    /**
     * Visit a InterpolatedSymbolNode node.
     *
     * @param {nodes.InterpolatedSymbolNode} node
     */
    visitInterpolatedSymbolNode(node: nodes.InterpolatedSymbolNode): void;
    /**
     * Visit a InterpolatedXStringNode node.
     *
     * @param {nodes.InterpolatedXStringNode} node
     */
    visitInterpolatedXStringNode(node: nodes.InterpolatedXStringNode): void;
    /**
     * Visit a ItLocalVariableReadNode node.
     *
     * @param {nodes.ItLocalVariableReadNode} node
     */
    visitItLocalVariableReadNode(node: nodes.ItLocalVariableReadNode): void;
    /**
     * Visit a ItParametersNode node.
     *
     * @param {nodes.ItParametersNode} node
     */
    visitItParametersNode(node: nodes.ItParametersNode): void;
    /**
     * Visit a KeywordHashNode node.
     *
     * @param {nodes.KeywordHashNode} node
     */
    visitKeywordHashNode(node: nodes.KeywordHashNode): void;
    /**
     * Visit a KeywordRestParameterNode node.
     *
     * @param {nodes.KeywordRestParameterNode} node
     */
    visitKeywordRestParameterNode(node: nodes.KeywordRestParameterNode): void;
    /**
     * Visit a LambdaNode node.
     *
     * @param {nodes.LambdaNode} node
     */
    visitLambdaNode(node: nodes.LambdaNode): void;
    /**
     * Visit a LocalVariableAndWriteNode node.
     *
     * @param {nodes.LocalVariableAndWriteNode} node
     */
    visitLocalVariableAndWriteNode(node: nodes.LocalVariableAndWriteNode): void;
    /**
     * Visit a LocalVariableOperatorWriteNode node.
     *
     * @param {nodes.LocalVariableOperatorWriteNode} node
     */
    visitLocalVariableOperatorWriteNode(node: nodes.LocalVariableOperatorWriteNode): void;
    /**
     * Visit a LocalVariableOrWriteNode node.
     *
     * @param {nodes.LocalVariableOrWriteNode} node
     */
    visitLocalVariableOrWriteNode(node: nodes.LocalVariableOrWriteNode): void;
    /**
     * Visit a LocalVariableReadNode node.
     *
     * @param {nodes.LocalVariableReadNode} node
     */
    visitLocalVariableReadNode(node: nodes.LocalVariableReadNode): void;
    /**
     * Visit a LocalVariableTargetNode node.
     *
     * @param {nodes.LocalVariableTargetNode} node
     */
    visitLocalVariableTargetNode(node: nodes.LocalVariableTargetNode): void;
    /**
     * Visit a LocalVariableWriteNode node.
     *
     * @param {nodes.LocalVariableWriteNode} node
     */
    visitLocalVariableWriteNode(node: nodes.LocalVariableWriteNode): void;
    /**
     * Visit a MatchLastLineNode node.
     *
     * @param {nodes.MatchLastLineNode} node
     */
    visitMatchLastLineNode(node: nodes.MatchLastLineNode): void;
    /**
     * Visit a MatchPredicateNode node.
     *
     * @param {nodes.MatchPredicateNode} node
     */
    visitMatchPredicateNode(node: nodes.MatchPredicateNode): void;
    /**
     * Visit a MatchRequiredNode node.
     *
     * @param {nodes.MatchRequiredNode} node
     */
    visitMatchRequiredNode(node: nodes.MatchRequiredNode): void;
    /**
     * Visit a MatchWriteNode node.
     *
     * @param {nodes.MatchWriteNode} node
     */
    visitMatchWriteNode(node: nodes.MatchWriteNode): void;
    /**
     * Visit a MissingNode node.
     *
     * @param {nodes.MissingNode} node
     */
    visitMissingNode(node: nodes.MissingNode): void;
    /**
     * Visit a ModuleNode node.
     *
     * @param {nodes.ModuleNode} node
     */
    visitModuleNode(node: nodes.ModuleNode): void;
    /**
     * Visit a MultiTargetNode node.
     *
     * @param {nodes.MultiTargetNode} node
     */
    visitMultiTargetNode(node: nodes.MultiTargetNode): void;
    /**
     * Visit a MultiWriteNode node.
     *
     * @param {nodes.MultiWriteNode} node
     */
    visitMultiWriteNode(node: nodes.MultiWriteNode): void;
    /**
     * Visit a NextNode node.
     *
     * @param {nodes.NextNode} node
     */
    visitNextNode(node: nodes.NextNode): void;
    /**
     * Visit a NilNode node.
     *
     * @param {nodes.NilNode} node
     */
    visitNilNode(node: nodes.NilNode): void;
    /**
     * Visit a NoKeywordsParameterNode node.
     *
     * @param {nodes.NoKeywordsParameterNode} node
     */
    visitNoKeywordsParameterNode(node: nodes.NoKeywordsParameterNode): void;
    /**
     * Visit a NumberedParametersNode node.
     *
     * @param {nodes.NumberedParametersNode} node
     */
    visitNumberedParametersNode(node: nodes.NumberedParametersNode): void;
    /**
     * Visit a NumberedReferenceReadNode node.
     *
     * @param {nodes.NumberedReferenceReadNode} node
     */
    visitNumberedReferenceReadNode(node: nodes.NumberedReferenceReadNode): void;
    /**
     * Visit a OptionalKeywordParameterNode node.
     *
     * @param {nodes.OptionalKeywordParameterNode} node
     */
    visitOptionalKeywordParameterNode(node: nodes.OptionalKeywordParameterNode): void;
    /**
     * Visit a OptionalParameterNode node.
     *
     * @param {nodes.OptionalParameterNode} node
     */
    visitOptionalParameterNode(node: nodes.OptionalParameterNode): void;
    /**
     * Visit a OrNode node.
     *
     * @param {nodes.OrNode} node
     */
    visitOrNode(node: nodes.OrNode): void;
    /**
     * Visit a ParametersNode node.
     *
     * @param {nodes.ParametersNode} node
     */
    visitParametersNode(node: nodes.ParametersNode): void;
    /**
     * Visit a ParenthesesNode node.
     *
     * @param {nodes.ParenthesesNode} node
     */
    visitParenthesesNode(node: nodes.ParenthesesNode): void;
    /**
     * Visit a PinnedExpressionNode node.
     *
     * @param {nodes.PinnedExpressionNode} node
     */
    visitPinnedExpressionNode(node: nodes.PinnedExpressionNode): void;
    /**
     * Visit a PinnedVariableNode node.
     *
     * @param {nodes.PinnedVariableNode} node
     */
    visitPinnedVariableNode(node: nodes.PinnedVariableNode): void;
    /**
     * Visit a PostExecutionNode node.
     *
     * @param {nodes.PostExecutionNode} node
     */
    visitPostExecutionNode(node: nodes.PostExecutionNode): void;
    /**
     * Visit a PreExecutionNode node.
     *
     * @param {nodes.PreExecutionNode} node
     */
    visitPreExecutionNode(node: nodes.PreExecutionNode): void;
    /**
     * Visit a ProgramNode node.
     *
     * @param {nodes.ProgramNode} node
     */
    visitProgramNode(node: nodes.ProgramNode): void;
    /**
     * Visit a RangeNode node.
     *
     * @param {nodes.RangeNode} node
     */
    visitRangeNode(node: nodes.RangeNode): void;
    /**
     * Visit a RationalNode node.
     *
     * @param {nodes.RationalNode} node
     */
    visitRationalNode(node: nodes.RationalNode): void;
    /**
     * Visit a RedoNode node.
     *
     * @param {nodes.RedoNode} node
     */
    visitRedoNode(node: nodes.RedoNode): void;
    /**
     * Visit a RegularExpressionNode node.
     *
     * @param {nodes.RegularExpressionNode} node
     */
    visitRegularExpressionNode(node: nodes.RegularExpressionNode): void;
    /**
     * Visit a RequiredKeywordParameterNode node.
     *
     * @param {nodes.RequiredKeywordParameterNode} node
     */
    visitRequiredKeywordParameterNode(node: nodes.RequiredKeywordParameterNode): void;
    /**
     * Visit a RequiredParameterNode node.
     *
     * @param {nodes.RequiredParameterNode} node
     */
    visitRequiredParameterNode(node: nodes.RequiredParameterNode): void;
    /**
     * Visit a RescueModifierNode node.
     *
     * @param {nodes.RescueModifierNode} node
     */
    visitRescueModifierNode(node: nodes.RescueModifierNode): void;
    /**
     * Visit a RescueNode node.
     *
     * @param {nodes.RescueNode} node
     */
    visitRescueNode(node: nodes.RescueNode): void;
    /**
     * Visit a RestParameterNode node.
     *
     * @param {nodes.RestParameterNode} node
     */
    visitRestParameterNode(node: nodes.RestParameterNode): void;
    /**
     * Visit a RetryNode node.
     *
     * @param {nodes.RetryNode} node
     */
    visitRetryNode(node: nodes.RetryNode): void;
    /**
     * Visit a ReturnNode node.
     *
     * @param {nodes.ReturnNode} node
     */
    visitReturnNode(node: nodes.ReturnNode): void;
    /**
     * Visit a SelfNode node.
     *
     * @param {nodes.SelfNode} node
     */
    visitSelfNode(node: nodes.SelfNode): void;
    /**
     * Visit a ShareableConstantNode node.
     *
     * @param {nodes.ShareableConstantNode} node
     */
    visitShareableConstantNode(node: nodes.ShareableConstantNode): void;
    /**
     * Visit a SingletonClassNode node.
     *
     * @param {nodes.SingletonClassNode} node
     */
    visitSingletonClassNode(node: nodes.SingletonClassNode): void;
    /**
     * Visit a SourceEncodingNode node.
     *
     * @param {nodes.SourceEncodingNode} node
     */
    visitSourceEncodingNode(node: nodes.SourceEncodingNode): void;
    /**
     * Visit a SourceFileNode node.
     *
     * @param {nodes.SourceFileNode} node
     */
    visitSourceFileNode(node: nodes.SourceFileNode): void;
    /**
     * Visit a SourceLineNode node.
     *
     * @param {nodes.SourceLineNode} node
     */
    visitSourceLineNode(node: nodes.SourceLineNode): void;
    /**
     * Visit a SplatNode node.
     *
     * @param {nodes.SplatNode} node
     */
    visitSplatNode(node: nodes.SplatNode): void;
    /**
     * Visit a StatementsNode node.
     *
     * @param {nodes.StatementsNode} node
     */
    visitStatementsNode(node: nodes.StatementsNode): void;
    /**
     * Visit a StringNode node.
     *
     * @param {nodes.StringNode} node
     */
    visitStringNode(node: nodes.StringNode): void;
    /**
     * Visit a SuperNode node.
     *
     * @param {nodes.SuperNode} node
     */
    visitSuperNode(node: nodes.SuperNode): void;
    /**
     * Visit a SymbolNode node.
     *
     * @param {nodes.SymbolNode} node
     */
    visitSymbolNode(node: nodes.SymbolNode): void;
    /**
     * Visit a TrueNode node.
     *
     * @param {nodes.TrueNode} node
     */
    visitTrueNode(node: nodes.TrueNode): void;
    /**
     * Visit a UndefNode node.
     *
     * @param {nodes.UndefNode} node
     */
    visitUndefNode(node: nodes.UndefNode): void;
    /**
     * Visit a UnlessNode node.
     *
     * @param {nodes.UnlessNode} node
     */
    visitUnlessNode(node: nodes.UnlessNode): void;
    /**
     * Visit a UntilNode node.
     *
     * @param {nodes.UntilNode} node
     */
    visitUntilNode(node: nodes.UntilNode): void;
    /**
     * Visit a WhenNode node.
     *
     * @param {nodes.WhenNode} node
     */
    visitWhenNode(node: nodes.WhenNode): void;
    /**
     * Visit a WhileNode node.
     *
     * @param {nodes.WhileNode} node
     */
    visitWhileNode(node: nodes.WhileNode): void;
    /**
     * Visit a XStringNode node.
     *
     * @param {nodes.XStringNode} node
     */
    visitXStringNode(node: nodes.XStringNode): void;
    /**
     * Visit a YieldNode node.
     *
     * @param {nodes.YieldNode} node
     */
    visitYieldNode(node: nodes.YieldNode): void;
}
import * as nodes from "./nodes.js";
